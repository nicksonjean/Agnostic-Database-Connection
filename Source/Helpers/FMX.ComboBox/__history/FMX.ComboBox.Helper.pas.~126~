unit FMX.ComboBox.Helper;

interface

uses
  System.SysUtils,
  System.Types,
  System.UITypes,
  System.Classes,
  System.DateUtils,
  FMX.Forms,
  FMX.Pickers,
  FMX.ListBox,
  FMX.Types,
  FMX.Controls,
  FMX.StdCtrls,
  EventDriven;

type
  TComboBoxHack = class(FMX.ListBox.TComboBox)
  private
    class var LastTimeKeydown : TDatetime;
    class var Keys : String;
  protected
    class procedure KeyDown(Sender: TObject; var Key: Word; var KeyChar: System.WideChar; Shift: TShiftState); reintroduce;
  end;

type
  TComboBoxHelper = class helper for TComboBox
  private
    class var FAutoComplete: Boolean;
    function GetAutoComplete : Boolean;
    procedure SetAutoComplete(Value : Boolean);
    procedure DoAutoComplete;
  public
    property AutoComplete: Boolean read GetAutoComplete write SetAutoComplete Default false;
  end;

implementation

uses
  FMX.ListBox.Helper;

{ TComboBoxHelper }


procedure TComboBoxHelper.DoAutoComplete;
begin
  if FAutoComplete = True then
  begin
    Self.OnKeyDown := DelegateKeyEvent(
      Self,
      procedure(Sender: TObject; var Key: Word; var KeyChar: Char; Shift: TShiftState)
      begin
        TComboBoxHack.KeyDown(Sender, Key, KeyChar, Shift);
      end
    );
  end;
end;

function TComboBoxHelper.GetAutoComplete : Boolean;
begin
  Result := FAutoComplete;
end;

procedure TComboBoxHelper.SetAutoComplete(Value: Boolean);
begin
  FAutoComplete := Value;
end;

{ TComboboxHack }

class procedure TComboBoxHack.KeyDown(Sender: TObject; var Key: Word; var KeyChar: System.WideChar; Shift: TShiftState);
var
  I: Integer;
begin
  if Key = vkReturn then
    Exit;
  if (KeyChar in [Chr(48)..Chr(57)]) or (KeyChar in [Chr(65)..Chr(90)]) or (KeyChar in [Chr(97)..Chr(122)]) then
  begin
    if MilliSecondsBetween(LastTimeKeydown, Now) < 500 then
      Keys := Keys + KeyChar
    else
      Keys := KeyChar;
    LastTimeKeydown := Now;
    for I := 0 to TComboBox(Sender).Count-1 do
    if UpperCase(Copy(TComboBox(Sender).Items[I], 0, Keys.Length)) = UpperCase(Keys) then
    begin
      TComboBox(Sender).ItemIndex := I;
      Break;
    end;
  end;
end;

end.
