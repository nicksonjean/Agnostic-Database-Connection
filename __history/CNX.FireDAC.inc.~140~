      {$IFDEF FireDACLib}
      with TConnection.FInstance.FSQLInstance do
      begin
        case FDriver of
          SQLITE:
            begin
              {$IFDEF MSWINDOWS}
              TFDPhysSQLiteDriverLink.Create(nil).VendorLib := ExtractFilePath(ParamStr(0)) + 'sqlite3.dll';
              {$ENDIF}
              ConnectionName := 'DBSQLite';
              DriverName := 'SQLite';
              Connected := False;
              with ResourceOptions as TFDTopResourceOptions do begin
                KeepConnection := True;
                Persistent := True;
                SilentMode := True;
              end;
              with FetchOptions as TFDFetchOptions do begin
                RecordCountMode := cmTotal;
              end;
              LoginPrompt := False;
              with Params as TFDPhysSQLiteConnectionDefParams do begin
                BeginUpdate();
                Clear;
                DriverID := 'SQLite';
                Database := FDatabase;
                EndUpdate();
              end;
            end;
          MYSQL:
            begin
              {$IFDEF MSWINDOWS}
              TFDPhysMySQLDriverLink.Create(nil).VendorLib := ExtractFilePath(ParamStr(0)) + 'libmysql.dll';
              {$ENDIF}
              ConnectionName := 'DBMySQL';
              DriverName := 'MySQL';
              Connected := False;
              with ResourceOptions as TFDTopResourceOptions do begin
                KeepConnection := True;
                Persistent := True;
                SilentMode := True;
              end;
              with FetchOptions as TFDFetchOptions do begin
                RecordCountMode := cmTotal;
              end;
              LoginPrompt := False;
              with Params as TFDPhysMySQLConnectionDefParams do begin
                BeginUpdate();
                Clear;
                DriverID := 'MySQL';
                Server := FHost;
                Port :=  IfThen(FPort = 3306, 3306, FPort);
                Database := FDatabase;
                UserName := FUsername;
                Password := FPassword;
                Compress := True;
                EndUpdate();
              end;
              ExecSQL('SET SQL_MODE=ANSI_QUOTES');
            end;
          FIREBIRD:
            begin
              {$IFDEF MSWINDOWS}
              TFDPhysFBDriverLink.Create(nil).VendorLib := ExtractFilePath(ParamStr(0)) + 'fbclient.dll';
              {$ENDIF}
              ConnectionName := 'DBFirebird';
              DriverName := 'FB';
              Connected := False;
              with ResourceOptions as TFDTopResourceOptions do begin
                KeepConnection := True;
                Persistent := True;
                SilentMode := True;
                DirectExecute := True;
              end;
              with FetchOptions as TFDFetchOptions do begin
                RecordCountMode := cmTotal;
              end;
              LoginPrompt := False;
              with Params as TFDPhysFBConnectionDefParams do begin
                BeginUpdate();
                Clear;
                DriverID := 'FB';
                Server := FHost;
                Port := IfThen(FPort = 3050, 3050, FPort);
                Database := FDatabase;
                UserName := FUsername;
                Password := FPassword;
                EndUpdate();
              end;
              Params.Values['Protocol'] := 'ipTCPIP';
            end;
          INTERBASE: // Falta Testar
            begin
              ConnectionName := 'DBInterbase';

            end;
          SQLSERVER: // Falta Testar
            begin
              ConnectionName := 'DBSQLServer';

            end;
          MSSQL: // Falta Testar
            begin
              ConnectionName := 'DBMSSQL';

            end;
          POSTGRES:
            begin
              {$IFDEF MSWINDOWS}
              TFDPhysPgDriverLink.Create(nil).VendorLib := ExtractFilePath(ParamStr(0)) + 'libpq.dll';
              {$ENDIF}
              ConnectionName := 'DBPostgreSQL';
              DriverName := 'PG';
              Connected := False;
              with ResourceOptions as TFDTopResourceOptions do
              begin
                KeepConnection := True;
                Persistent := True;
                SilentMode := True;
              end;
              with FetchOptions as TFDFetchOptions do
              begin
                RecordCountMode := cmTotal;
              end;
              LoginPrompt := False;
              with Params as TFDPhysPGConnectionDefParams do begin
                BeginUpdate();
                Clear;
                DriverID := 'PG';
                Server := FHost;
                Port := IfThen(FPort = 5432, 5432, FPort);
                Database := FDatabase;
                UserName := FUsername;
                Password := FPassword;
                MetaDefSchema := FSchema;
                EndUpdate();
              end;
              ExecSQL('SET search_path TO E''' + FSchema + ''', E''public'';');
            end;
          ORACLE: // Falta Testar
            begin
              ConnectionName := 'DBOracle';

            end;
        end;
      end;
      {$ENDIF}